name: dags

on:
  pull_request:
    branches:
      - main
    paths:
      - 'dags/**.py'
  push:
    branches:
      - main
    paths:
      - 'dags/**.py'

permissions:
  contents: read

jobs:
  lint-python-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        with:
          src: "./dags"

  test-load-dags:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Load dags
        run: python dags/*

  get-composer-buckets:
    needs: test-load-dags
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - id: get-dev
        name: Get Cloud Composer bucket in dev
        run: |
          sudo apt install -y jq
          terraform init
          terraform output -json >> outputs.json
          echo "::set-output name=bucket::$(jq -r '.airflow_dags_gcs_prefix.value' outputs.json)"
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        working-directory: terraform/environments/dev

    outputs:
      dev: ${{ steps.get-dev.outputs.bucket}}

  synchronize-bucket-folder-dags-dev:
    needs: get-composer-buckets
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    - name: Synchronize Cloud Composer bucket folder dags/ in dev
      run: gsutil -m rsync -d -r  -x ".*\.md$" dags ${{ needs.get-composer-buckets.outputs.dev }}
